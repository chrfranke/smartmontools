## Process this file with automake to produce Makefile.in
#
# Makefile.am
#

ACLOCAL_AMFLAGS = -I m4

doc_DATA = \
        doc/AUTHORS \
        doc/CHANGELOG.md \
        COPYING \
        doc/INSTALL \
        README.md

docolddir = $(docdir)/old
docold_DATA = \
        doc/old/NEWS-5.0-7.5.txt

examplescripts_DATA = \
        doc/examplescripts/README
examplescripts_SCRIPTS = \
        doc/examplescripts/Example1 \
        doc/examplescripts/Example2 \
        doc/examplescripts/Example3 \
        doc/examplescripts/Example4 \
        doc/examplescripts/Example5 \
        doc/examplescripts/Example6 \
        doc/examplescripts/Example7 \
        doc/examplescripts/Example8

EXTRA_DIST = \
        .editorconfig \
        autogen.sh \
        doc/old/ChangeLog-6.0-7.0.txt \
        doc/old/ChangeLog-5.0-6.0.txt \
        doc/old/ChangeLog-7.0-7.5.txt \
        m4/pkg.m4 \
        $(doc_DATA) \
        $(docold_DATA) \
        $(examplescripts_DATA) \
        $(examplescripts_SCRIPTS)

CLEANFILES = \
        smartmontools-$(PACKAGE_VERSION).tar \
        smartmontools-$(PACKAGE_VERSION)-bin.tar

# 'make maintainer-clean' also removes files generated by './autogen.sh'
MAINTAINERCLEANFILES = \
        $(srcdir)/Makefile.in \
        $(srcdir)/aclocal.m4 \
        $(srcdir)/compile \
        $(srcdir)/configure \
        $(srcdir)/configure~ \
        $(srcdir)/config.guess \
        $(srcdir)/config.h.in \
        $(srcdir)/config.h.in~ \
        $(srcdir)/config.sub \
        $(srcdir)/depcomp \
        $(srcdir)/install-sh \
        $(srcdir)/ltmain.sh \
        $(srcdir)/m4/libtool.m4 \
        $(srcdir)/m4/libtool.m4~ \
        $(srcdir)/m4/lt*.m4 \
        $(srcdir)/m4/lt*.m4~ \
        $(srcdir)/m4/pkg.m4 \
        $(srcdir)/missing

SUBDIRS = include lib src

#
# Additional targets in '*/Makefile.am'
#
SRC_TARGETS = cppcheck htmlman pdfman shellcheck
INC_SRC_TARGETS =
LIB_SRC_TARGETS =
LIB_TARGETS = clean-examples
INC_LIB_TARGETS = examples install-examples

if OS_WIN32_MINGW
SRC_TARGETS += cleandist-win32 clean-vc distclean-vc maintainer-clean-vc
INC_SRC_TARGETS += config-vc
LIB_SRC_TARGETS += dist-win32 distdir-win32 install-win32 installer-win32
endif

if OS_DARWIN
LIB_SRC_TARGETS += install-darwin install-darwin-cleanup
endif

# Avoid automake warning: '.PHONY was already defined in condition ...'
phony = bin-dist $(SRC_TARGETS) $(INC_SRC_TARGETS) $(LIB_SRC_TARGETS)
.PHONY: $(phony)

$(SRC_TARGETS) $(INC_SRC_TARGETS) $(LIB_SRC_TARGETS):
	@case ' $(INC_SRC_TARGETS) $(LIB_SRC_TARGETS) ' in *\ $@\ *) \
	  echo $(MAKE) -C include; $(MAKE) -C include ;; \
	esac
	@case ' $(LIB_SRC_TARGETS) ' in *\ $@\ *) \
	  echo $(MAKE) -C lib; $(MAKE) -C lib ;; \
	esac
	$(MAKE) -C src $@

$(LIB_TARGETS) $(INC_LIB_TARGETS):
	@case ' $(INC_LIB_TARGETS) ' in *\ $@\ *) \
	  echo $(MAKE) -C include; $(MAKE) -C include ;; \
	esac
	$(MAKE) -C lib $@

# Add version information to distribution directory
dist-hook:
	$(MAKE) -C include smartmon/version.sh
	cp include/smartmon/version.sh $(distdir)/src/dist-version.sh

if REPRODUCIBLE_BUILD
# Override the builtin 'dist-*' rules to create reproducible tarballs

phony += dist-fail

dist-gzip: distdir
	$(dist_tar) $(distdir) > $(distdir).tar
	-touch -d @$(SOURCE_DATE_EPOCH) $(distdir).tar
	unset GZIP; gzip $(GZIP_ENV) -f -n $(distdir).tar
	$(am__post_remove_distdir)

dist-xz: distdir
	$(dist_tar) $(distdir) > $(distdir).tar
	-touch -d @$(SOURCE_DATE_EPOCH) $(distdir).tar
	unset XZ_OPT; xz -e -f $(distdir).tar
	$(am__post_remove_distdir)

dist-zstd: distdir
	$(dist_tar) $(distdir) > $(distdir).tar
	-touch -d @$(SOURCE_DATE_EPOCH) $(distdir).tar
	unset ZSTD_CLEVEL; zstd -19 -f -q --rm $(distdir).tar
	$(am__post_remove_distdir)

# List these separately to let automake disable the builtins
dist-bzip2: dist-fail
dist-bzip3: dist-fail
dist-lzip: dist-fail
dist-zip: dist-fail

dist-fail:
	@! echo "Only 'dist-{gzip,xz,zstd}' are supported if SOURCE_DATE_EPOCH is used." >&2
endif

#
# Create binary distribution tarball 'smartmontools-VERSION-bin.tar.gz'
#
bin_distdir = $(distdir)-bin
bin_distfile = $(bin_distdir).tar.gz

bin-dist:
	$(MAKE) DESTDIR="$$(pwd)/$(bin_distdir)" install
	( cd $(bin_distdir) && $(dist_tar) * ) > $(bin_distdir).tar
	unset GZIP; gzip $(GZIP_ENV) -n < $(bin_distdir).tar > $(bin_distfile)
	-test -z '$(SOURCE_DATE_EPOCH)' || touch -d @$(SOURCE_DATE_EPOCH) $(bin_distfile)
	rm -rf $(bin_distdir) $(bin_distdir).tar
